#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q             &kp W    &kp E     &kp R      &kp T                                    &kp Y          &kp U  &kp I  &kp O      &kp P
&kp LCTRL         &kp A    &kp S     &kp D      &kp F                                    &kp G          &kp H  &kp J  &kp K      &kp L
&kp LEFT_SHIFT    &kp Z    &kp X     &kp C      &kp V                                    &kp B          &kp N  &kp M  &kp COMMA  &kp DOT
&kp LEFT_COMMAND  &kp TAB  &kp LALT  &lt 6 TAB  &lt 4 SPACE  &lt 5 LA(GRAVE)  &kp ENTER  &kp BACKSPACE                           &lt 1 SLASH
            >;
        };

        hhkb {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F8  &kp F9      &kp F10         &kp F11         &kp F12
&trans  &trans  &trans  &trans  &kp F6                  &kp F7  &none       &none           &kp UP_ARROW    &kp RIGHT
&trans  &trans  &trans  &trans  &trans                  &none   &kp DELETE  &kp LEFT_ARROW  &kp DOWN_ARROW  &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                              &trans
            >;
        };

        empty {
            label = "empty";
            bindings = <
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none                &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none                       &none
            >;
        };

        empty_2 {
            label = "EMPTY";
            bindings = <
&trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &none   &none      &none      &none      &none
&trans  &trans  &trans  &trans  &trans                  &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &none
&trans  &trans  &trans  &trans  &trans                  &none   &none      &none      &none      &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                   &trans
            >;
        };

        scroll_number {
            label = "Scrl Num";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&none         &none         &none         &none         &kp F6                      &kp F7        &none         &none         &none         &kp PAGE_UP
&none         &none         &none         &none         &none         &none  &none  &none                                                   &kp PAGE_DOWN
            >;
        };

        symbol_snipe {
            label = "SNP SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none                      &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&none            &none         &none         &none         &none                      &kp UNDERSCORE  &kp PLUS       &kp COMMA         &kp PERIOD            &kp NON_US_BACKSLASH
&none            &none         &none         &none         &none        &none  &none  &none                                                                  &none
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
